<?xml version="1.0" encoding="UTF-8"?>

<openerp>
    <data noupdate="0">

<!--         <record id="action_download_as_word_document" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Download as Word document</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_test" />
            <field name="sequence" eval="5" />
            <field name="code">action = self.to_docx(cr, uid, context=context)</field>
        </record> -->

        <record id="action_remove_duplicate_questions" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Remove duplicates</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_question" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">
if records:
    wizard = env['academy.tests.remove.duplicate.questions.wizard']
    wizard.remove_duplicates(records)
            </field>
            <field name="binding_model_id" ref="academy_tests.model_academy_tests_question" />
            <field name="binding_view_types">list</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_download_test_as_moodle_xml" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Export to moodle</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_test" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = record.download_as_moodle_xml()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_tests_test" />
            <field name="binding_view_types">form</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_download_questions_as_moodle_xml" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Export to moodle</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_question" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = records.download_as_moodle_xml()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_tests_question" />
            <field name="binding_view_types">list,form</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_redirect_to_preview" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Test preview</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_test" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = records.redirect_to_preview()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_tests_test" />
            <field name="binding_view_types">form</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>
        
        <!-- Old method. This has been replaced by a wizard
        <record id="action_shuffle_the_questions" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Shuffle</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_test" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = records.shuffle()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_tests_test" />
            <field name="binding_view_types">list,form</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record> -->

        <record id="action_view_enrolment_available_questions_server" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">View available questions</field>
            <field name="model_id" ref="academy_base.model_academy_training_action_enrolment" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = records.view_available_questions()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_training_action_enrolment" />
            <field name="binding_view_types">kanban,list,form,pivot</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_view_training_action_available_questions_server" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">View available questions</field>
            <field name="model_id" ref="academy_base.model_academy_training_action" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = records.view_available_questions()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_training_action" />
            <field name="binding_view_types">kanban,list,form,pivot</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_view_training_activity_available_questions_server" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">View available questions</field>
            <field name="model_id" ref="academy_base.model_academy_training_activity" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = records.view_available_questions()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_training_activity" />
            <field name="binding_view_types">kanban,list,form,pivot</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_view_competency_unit_available_questions_server" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">View available questions</field>
            <field name="model_id" ref="academy_base.model_academy_competency_unit" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = records.view_available_questions()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_competency_unit" />
            <field name="binding_view_types">kanban,list,form,pivot</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_view_training_module_available_questions_server" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">View available questions</field>
            <field name="model_id" ref="academy_base.model_academy_training_module" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = records.view_available_questions()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_training_module" />
            <field name="binding_view_types">kanban,list,form,pivot</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_mail_template_check_training_module_server" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Check training module</field>
            <field name="model_id" ref="academy_base.model_academy_training_module" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = records.check_training_module()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_training_module" />
            <field name="binding_view_types">list,form</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_mail_template_check_competency_unit_server" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Check competency unit</field>
            <field name="model_id" ref="academy_base.model_academy_competency_unit" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">action = records.check_competency_unit()</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_competency_unit" />
            <field name="binding_view_types">list,form</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_random_template_new_test" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">New test</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_random_template" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">records.new_test(gui=False)</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_tests_random_template" />
            <field name="binding_view_types">list,form</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_academy_tests_question_impugnment_close" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Close</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_question_impugnment" />
            <field name="sequence" eval="5" />
            <field name="state">code</field>
            <field name="code">records.toggle_open_close(force_close=True)</field>
            <field name="binding_model_id" ref="academy_tests.model_academy_tests_question_impugnment" />
            <field name="binding_view_types">list,form</field>
            <field name="groups_id" eval="[(4, ref('academy_base.academy_group_teacher'))]"/>
        </record>

        <record id="action_reconcile_all_global_assignments" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Reconciliate assignments</field>
            <field name="state">code</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_test_training_assignment" />
            <field name="sequence" eval="5" />
            <field name="code">model.reconcile_records(full_db=True)</field>
        </record>

        <record id="action_reconcile_all_attempts" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Reconciliate attempts</field>
            <field name="state">code</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_attempt" />
            <field name="sequence" eval="5" />
            <field name="code">model.reconcile_all()</field>
        </record>

        <record id="action_reconcile_all_attempt_answers" model="ir.actions.server">
            <field name="type">ir.actions.server</field>
            <field name="name">Reconciliate attempt answers</field>
            <field name="state">code</field>
            <field name="model_id" ref="academy_tests.model_academy_tests_attempt_answer" />
            <field name="sequence" eval="5" />
            <field name="code">model.reconcile_all()</field>
        </record>

    </data>
</openerp>
